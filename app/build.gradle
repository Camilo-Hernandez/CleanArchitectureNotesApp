plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android' // Es lo mismo que usar la dependencia 'kotlin-android'

    /**
    El plugin id ‘kotlin-kapt’ es un complemento del compilador de Kotlin que permite usar
     procesadores de anotaciones en tus proyectos de Kotlin.
     Los procesadores de anotaciones son herramientas que generan código o recursos a partir
     de las anotaciones en el código fuente2. Algunos ejemplos de bibliotecas que usan
     procesadores de anotaciones son Dagger, Data Binding, Room y Lombok1.
     Para usar el plugin ‘kotlin-kapt’, debes aplicarlo en tu archivo build.gradle y agregar las
     dependencias correspondientes usando la configuración kapt1. Por ejemplo:

    '''gradle
    plugins {
        id 'org.jetbrains.kotlin.kapt' version '1.8.20'
    }

    dependencies {
        kapt 'com.google.dagger:dagger-compiler:2.40.5'
    }
     '''
     */
    id 'kotlin-kapt'

    /**
     * El plugin id ‘dagger.hilt.android.plugin’ es un complemento de Gradle que te permite usar
     * Hilt en tu aplicación de Android1. Hilt es una biblioteca de inyección de dependencias que
     * se basa en Dagger y simplifica la infraestructura necesaria para usar DI en tu proyecto.
     * Para usar el plugin ‘dagger.hilt.android.plugin’, debes aplicarlo en tu archivo build.gradle
     * del módulo de la app y agregar las dependencias correspondientes usando la configuración kapt.
     * Por ejemplo:

     plugins {
     id 'com.google.dagger.hilt.android' version '2.44'
     }

     dependencies {
     implementation "com.google.dagger:hilt-android:2.44"
     kapt "com.google.dagger:hilt-compiler:2.44"
     }
     */
    id 'dagger.hilt.android.plugin' // Debe usarse con classpath "com.google.dagger:hilt-android-gradle-plugin:2.42" del build.gradle del project

}

android {
    namespace 'com.example.cleanarchitecturenotesapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.cleanarchitecturenotesapp"
        minSdk 27
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        // La versión 1.8 y superiores a la 11 generan problemas
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        // La versión de la JVM Objetivo debe ser la misma que la de Java usada en compile options
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        // Se utiliza la misma versión de compose para facilidad.
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.5.21'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // Dependencias para usar bibliotecas de Jetpack que proveen funcionalidades comunes para Android
    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'

    // Dependencias para usar Jetpack Compose, un conjunto de herramientas para crear UI nativas de Android
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.1.0-beta02' // No implementar material 2 al mismo tiempo para evitar conflictos
    implementation 'androidx.activity:activity-compose:1.7.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1"
    implementation "androidx.navigation:navigation-compose:2.6.0-alpha09"
    implementation "androidx.hilt:hilt-navigation-compose:1.1.0-alpha01"
    // Dependencia para depurar la UI de Compose en el modo de diseño de Android Studio
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    // Dependencias para realizar pruebas unitarias, de integración y de UI en Android
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // Dependencias para usar Hilt, una biblioteca que simplifica la inyección de dependencias en Android
    implementation 'com.google.dagger:hilt-android:2.45'
    kapt 'com.google.dagger:hilt-android-compiler:2.45'
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.0.0"


    // Dependencias para usar Room, una biblioteca que provee una capa de abstracción sobre SQLite para facilitar el acceso a datos persistentes
    implementation "androidx.room:room-runtime:2.5.1"
    kapt "androidx.room:room-compiler:2.5.1"
    implementation "androidx.room:room-ktx:2.5.1"

    // Dependencias para usar Coroutines, una biblioteca que permite escribir código asíncrono de forma secuencial y sin bloqueos
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
}